!+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
! GaN - AlGaN - AlN - GaN model 
! Model is flexible, in general, upto four layers of material are
! possible with this code. 
! You can also make the AlN layer into AlGaN when you set material 
! properties, so that you have the standard GaN - AlGaN - GaN system
! Further note. 
! All units are in nm 
!+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 %Ignore2DHG             = no       !Can choose to neglect this, but better to have it for now                                           
 %FunctionParser         = yes      

!++++++++++++++++++++++++++++++++
 %AlloyContent           = 0.27     ! First set the alloy content for the AlGaN layer
 %SubstrateAlloyContent  = 0.2      ! Set the alloy content of the substrate layer  
!++++++++++++++++++++++++++++++++

!-------------------
! Layer thicknesses
!-------------------
!++++++++++++++++++++++++++++++++
 %ThicknessGaNcap        =  3.0     ! units in nm
 %ThicknessAlGaN         =  30      ! units in nm 
 %ThicknessAlN           =  1.0     ! units in nm 
%ThicknessGaNBuffer      =  100.0   ! units in nm
!++++++++++++++++++++++++++++++++

!---------------------------------------------------------------------------------------------------
!  Barrier Height at Surface  - Assume GaN cap is exposed to air
!  Note: actual value is controversial and depends severly on surface preparation
!  See discussion in Heikman et al., J. Appl. Phys. Vol. 93, No. 12, 15 June 2003
!  For a GaN surface grown by MOCVD exposed to air, barrier height ~ 1.0 eV
!---------------------------------------------------------------------------------------------------
!++++++++++++++++++++++++++++++++
 %SchottkyBarrierHeight  =   1.0     ! units in eV 
!++++++++++++++++++++++++++++++++
 %xmin                   =  -(1.0 + %ThicknessGaNcap)        ! minimum coordinate of whole structure 
 %xmax                   =  500.0                             ! maximum coordinate of whole structure
 %MiddleGaNcap           =  %ThicknessGaNcap / 2             ! middle of GaN cap layer 
 %MiddleAlGaN            =  %ThicknessAlGaN  / 4             ! middle of AlGaN layer / 4  
 %PosAlN                 =  %ThicknessAlGaN + %ThicknessAlN  ! Position of the AlN/GaN 2DEG interface
 %PosGaNAlGaNsubstrate   =  %ThicknessAlGaN + %ThicknessAlN + %ThicknessGaNBuffer
!---------------
! Grid spacings
!---------------   
 %Spacing_QR             = 0.1                               ! grid spacing in quantum region (nm)
 %Spacing_general        = 0.5 ! 1.0                         ! grid spacing elsewhere (nm)          
!-------------------------------------------
! Define coordinate of 2DEG quantum region.
!-------------------------------------------
 %QR_width_2DEG          = 24.0            ! width of quantum region of 2DEG (Note: this does not physically represent the width of the 2DEG, 
                                           ! this is just a region where the grid spacing density is higher 
 %QRLeft_2DEG            = %ThicknessAlGaN ! minimum coordinate of quantum region of 2DEG 
 %QRRight_2DEG           = %ThicknessAlGaN + %QR_width_2DEG ! maximum coordinate of quantum region of 2DEG 

!-------------------------------------------
! Define coordinate of 2DHG quantum region.
!-------------------------------------------
 %QRLeft_2DHG            = -%MiddleGaNcap * 1.5                      ! minimum coordinate of quantum region of 2DHG 
 %QRRight_2DHG           =  %MiddleAlGaN  * 4/10                     ! maximum coordinate of quantum region of 2DHG 
 %Temperature            =  300                                      ! temperature of HEMT operation 

 !----------------------------------------------------------------------------
 ! If you need an integer, then call the variable '%INT(<name>)'.
 !----------------------------------------------------------------------------
 %INT(Nodes_Surface)       =  %MiddleGaNcap                    /%Spacing_QR - 1  
 %INT(Nodes_QR_2DHG_GaN)   =  %MiddleGaNcap                    /%Spacing_QR      - 1  
 %INT(Nodes_QR_2DHG_AlGaN) =  %MiddleAlGaN                     /%Spacing_QR      - 1  
 %INT(Nodes_AlGaN)         = (%ThicknessAlGaN-%MiddleAlGaN)    /%Spacing_QR - 1  
 %INT(Nodes_QR_2DEG_AlN)   = (%ThicknessAlN)                   /%Spacing_QR      - 1
 %INT(Nodes_QR_2DEG_GaN)   = (%QR_width_2DEG)                  /%Spacing_QR      - 1  
 %INT(Nodes_substrate)     = (%xmax-%QRRight_2DEG)             /%Spacing_general - 1  


!****** OVERALL SIMULATION PARAMETERS **************************************!

!---------------------------------------------------------------------------!
! orientation specifies the axes which are simulated                        !
! e.g. in 1D, 0 0 1 means along z axis                                      !
!---------------------------------------------------------------------------!
$simulation-dimension                                                       !
 dimension   = 1                                                            !
 orientation = 1 0 0                                                        !
$end_simulation-dimension                                                   !
!---------------------------------------------------------------------------!

!---------------------------------------------------------------------------!
$numeric-control                                                            !
 simulation-dimension  = 1                                                  !
 varshni-parameters-on = yes                                                !  Use temperature dependent band gaps.

!zero-potential        = yes                                                !  Set initial electrostatic potential to 0 V.
 zero-potential        = no                                                 !

!use-band-gaps         = no    ! default setting of nextnano3               !  use 'conduction-band-energies' of material parameters (default)
!use-band-gaps         = yes   ! to be consistent with nextnano++           !  use 'band-gaps'                of material parameters

!schroedinger-masses-anisotropic = box                                      !
!schroedinger-masses-anisotropic = 1D                                       !
!schroedinger-masses-anisotropic = no                                       !
!schroedinger-masses-anisotropic = yes                                      !

 newton-method         = Newton-1

$end_numeric-control                                                        !
!---------------------------------------------------------------------------!

!---------------------------------------------------------------------------!
$global-parameters                                                          !
 lattice-temperature = %Temperature                                         ! Kelvin
$end_global-parameters                                                      !
!---------------------------------------------------------------------------!

!---------------------------------------------------------------------------!
! Flow control is the possibility to control the actual computation.        !
!---------------------------------------------------------------------------!
$simulation-flow-control                                                    !
!flow-scheme         = 0                                                    ! do (almost) nothing
 flow-scheme         = 2                                                    ! self-consistent Schrodinger-Poisson
!flow-scheme         = 3                                                    ! solve Schroedinger equation
!strain-calculation  = no-strain                                            !
 strain-calculation  = homogeneous-strain                                   !
$end_simulation-flow-control                                                !
!---------------------------------------------------------------------------!

!---------------------------------------------------------------------------!
! The domain type in 1D usually is 0 0 1 which means that the simulated     !
! dimension is the 0 0 1 axis.                                              !
! z-coordinates specify the size of the simulated region in [nm].           !
! pseudomorphic-on specifies the substrate material and therefore           !
! determines strain.                                                        !
!---------------------------------------------------------------------------!
$domain-coordinates                                                         !
 domain-type            = 1 0 0                                             !
 x-coordinates          = %xmin %xmax

 !------------------------------------------------------------------------------------------------
 ! With these Miller-Bravais indices, we can define a cation- or anion-faced structure.
 !  ==>  anion-faced structure: hkil-x-direction = 0  0  0  1
 !  ==> cation-faced structure: hkil-x-direction = 0  0  0 -1    <== considered in this tutorial
 !------------------------------------------------------------------------------------------------
 !hkil-x-direction       = 0  0  0   1  !  anion-faced structure             ! Miller-Bravais indices of x coordinate axis
 hkil-x-direction        = 0  0  0  -1  ! cation-faced structure             ! Miller-Bravais indices of x coordinate axis
 hkil-y-direction        = 0  1  -1  0                                       ! Miller indices of y coordinate axis [0 0 1]

 growth-coordinate-axis = 1 0 0                                             !
 pseudomorphic-on       = Al(x)Ga(1-x)N                                     !
 alloy-concentration    = 0.2d0
$end_domain-coordinates                                                     !
!---------------------------------------------------------------------------!

!****** END OVERALL SIMULATION PARAMETERS **********************************!


!****** REGIONS AND CLUSTERS ***********************************************!

!---------------------------------------------------------------------------!
! You specified n regions in the simulation area. If they do not            !
! completely fill the simulation area, the resulting rest area is           !
! automatically assigned as region number n+1.                              !
! So you ALWAYS have one region more than you actually specified (even if   !
! they completely fill the simulation area).                                !
! We could also set any region to a higher priority which means that it     !
! would be on top of the lower priority region.                             !
!---------------------------------------------------------------------------!
$regions                                                                    !

 !-----------------------------------------------------------------------------------
 ! These are the regions of the AlGaN/AlN/GaN region (without surface or GaN cap layer).
 !-----------------------------------------------------------------------------------
 region-number = 1    base-geometry = line   region-priority = 1            !Encompasses the 2DHG region of the AlGaN layer 
 x-coordinates = 0d0    %MiddleAlGaN

 region-number = 2    base-geometry = line   region-priority = 1            !Encompasses the AlGaN region before the 2DHG starts becoming significant 
 x-coordinates = %MiddleAlGaN    %QRLeft_2DEG
 
 region-number = 3    base-geometry = line   region-priority = 1            !Encompasses the AlN region 
 x-coordinates = %QRLeft_2DEG    %PosAlN
 
 region-number = 4    base-geometry = line   region-priority = 1            !Encompasses the GaN region where the 2DEG forms 
 x-coordinates = %PosAlN     %QRRight_2DEG
 
 region-number = 5    base-geometry = line   region-priority = 1            !Encompasses the GaN region of the substrate where the 2DEG is insignificant 
 x-coordinates = %QRRight_2DEG    %PosGaNAlGaNsubstrate


 
 !---------------------------------------------------------------------------------------
 ! These are the regions left of the AlGaN/AlN/GaN region, i.e. the GaN cap and the surface.
 !---------------------------------------------------------------------------------------
 region-number = 6    base-geometry = line   region-priority = 1            !
 x-coordinates = %xmin    -%ThicknessGaNcap                                 ! air

 region-number = 7    base-geometry = line   region-priority = 2            ! GaN cap layer
 x-coordinates = -%ThicknessGaNcap     0d0


region-number = 8    base-geometry = line   region-priority = 1            !Encompasses the GaN region of the substrate where the 2DEG is insignificant 
 x-coordinates = %PosGaNAlGaNsubstrate    %xmax

$end_regions                                                                !
!---------------------------------------------------------------------------!

!---------------------------------------------------------------------------!
! For every boundary between regions, there has to exist a grid line. And   !
! between these grid lines there are a certain number of nodes which        !
! determine the resolution of the simulated region. In order to specify     !
! inhomogeneous grids you can use a grid factor different from one. This    !
! means that the distance between each node is increased by this factor     !
! from i to i+1.                                                            !
!---------------------------------------------------------------------------!
$grid-specification                                                         !
 grid-type        =    1 0 0                                                !
 x-grid-lines     =  %xmin -%ThicknessGaNcap -%MiddleGaNcap      0d0                     %MiddleAlGaN              %ThicknessAlGaN      %PosAlN          %QRRight_2DEG           %xmax
 x-nodes          =       1                 %INT(Nodes_Surface) %INT(Nodes_QR_2DHG_GaN) %INT(Nodes_QR_2DHG_AlGaN) %INT(Nodes_AlGaN) %INT(Nodes_QR_2DEG_AlN) %INT(Nodes_QR_2DEG_GaN) %INT(Nodes_substrate)
 x-grid-factors   =       1d0               1d0                 1d0                  1d0                  1d0                 1d0               1d0               1d0
$end_grid-specification                                                     !
!---------------------------------------------------------------------------!

!---------------------------------------------------------------------------!
! A cluster is a group of regions. Every region has to belong to a cluster  !
! but a cluster can contain several regions. This is useful if you want to  !
! construct more complicated objects of more regions which have the same    !
! material.                                                                 !
!---------------------------------------------------------------------------!
$region-cluster                                                             !
 cluster-number = 1    region-numbers = 1  2                             ! AlGaN (actual)
 cluster-number = 2    region-numbers = 4 5 7                               ! GaN
 cluster-number = 3    region-numbers = 3                                   ! AlN
 cluster-number = 4    region-numbers = 6 9                                 ! air
 cluster-number = 5    region-numbers = 8                                 ! air

$end_region-cluster                                                         !
!---------------------------------------------------------------------------!

!****** END REGIONS AND CLUSTER ********************************************!


!****** MATERIALS AND ALLOY PROFILES ****************************************

!---------------------------------------------------------------------------!
! All materials used in the simulation region are listed here. A material   !
! has to be assigned to each cluster.                                       !
! In the case of alloys an alloy function has to be specified.              !
!---------------------------------------------------------------------------!
$material                                                                   !

material-number = 1                                                         !
material-name   = GaN
cluster-numbers =  2

material-number = 2                                                         !
material-name   = Al(x)Ga(1-x)N  
cluster-numbers = 1                                                         !
alloy-function  = constant

material-number = 3 
material-name   = Air-wz                                                    ! surface
cluster-numbers = 4  

material-number = 4
material-name   = AlN
cluster-numbers = 3
 

material-number = 5                                                         !
material-name   = Al(x)Ga(1-x)N  
cluster-numbers = 5                                                         !
alloy-function  = constant

$end_material                                                               !
!---------------------------------------------------------------------------!

!---------------------------------------------------------------------------!
$alloy-function                                                             !

 material-number              = 2                                           !
 function-name                = constant                                   
 xalloy                       = %AlloyContent


 material-number              = 5                                           !
 function-name                = constant                                   
 xalloy                       = %SubstrateAlloyContent

$end_alloy-function                                                         !
!---------------------------------------------------------------------------!

!---------------------------------------------------------------------------!
! Here we are overwriting the database entries for GaN.                     !
!---------------------------------------------------------------------------!
$binary-wz-default                                                          !
 binary-type                         = GaN-wz-default                       !
 apply-to-material-numbers           = 1 2                                  !
 conduction-band-masses              = 0.202d0   0.202d0   0.206d0          ! Gamma m_perp=0.202, m_perp=0.202, m_par=0.206 (with respect to c-axis) - http://www.ioffe.rssi.ru/SVA/NSM/Semicond/GaN/bandstr.html
                                       1.430d0   0.330d0   0.330d0          ! ?? U-point
                                       2.170d0   0.280d0   0.280d0          ! ??
 valence-band-masses                 = 1.6d0     1.6d0     1.1d0            ! hh m_perp=1.6 , m_perp=1.6 , m_par=1.1  (with respect to c-axis) - http://www.ioffe.rssi.ru/SVA/NSM/Semicond/GaN/bandstr.html
                                       0.15d0    0.15d0    1.1d0            ! lh m_perp=0.15, m_perp=0.15, m_par=1.1  (with respect to c-axis) - http://www.ioffe.rssi.ru/SVA/NSM/Semicond/GaN/bandstr.html
                                       1.1d0     1.1d0     0.15d0           ! so m_perp=1.1 , m_perp=1.1 , m_par=0.15 (with respect to c-axis) - http://www.ioffe.rssi.ru/SVA/NSM/Semicond/GaN/bandstr.html

! band-gaps                           = 3.510d0   7d0     7d0                ! [eV]   0 K - Gamma, ?, ? [Vurgaftman2]
conduction-band-energies            = 2.79967d0 6.190d0 6.490d0            ! 0 Kelvin Vurgaftman2 (3.510 eV), Gamma, 2nd, 3rd
 valence-band-energies               = -0.726d0                             ! This is zb-entry. A. Zunger, "average" valence band energy E_v [eV]
 varshni-parameters                  = 0.909d-3 0.00d0   0.00d0             ! alpha [eV/K](Gamma, indirect, indirect) Vurgaftman1, Vurgaftman2
                                       830d0    0.00d0   0.00d0             ! beta  [K]   (Gamma, indirect, indirect) Vurgaftman1, Vurgaftman2

 static-dielectric-constants         = 9.28d0    9.28d0   10.10d0           ! eps_a, eps_a, eps_c - Tsai et al., JAP 85, 1475 (1999)
 lattice-constants                   = 0.3189d0  0.3189d0  0.5185d0         ! [nm]   a,a,c  Vurgaftman1 and Vurgaftman2 and Ambacher, Review  300 K
 lattice-constants-temp-coeff        = 0d0       0d0       0d0              ! [nm/K] a,a,c  Lattice constants are almost constant in temperature range 0 - 300 K, at least for AlN. For AlN: S. Figge et al. APL 94, 101915 (2009)
 elastic-constants                   = 390d0    145d0     106d0             ! Vurgaftman1 and Vurgaftman2
                                       398d0    105d0                       ! c11,c12,c13,c33,c44
 piezo-electric-constants            = 1.27d0   -0.35d0   -0.30d0           ! [C/m^2]  e33, e31 Vurgaftman1, e15 Ambacher
                                       0d0 0d0 0d0 0d0 0d0 0d0 0d0 0d0      ! [C/m^2] B311,B312,B313,B333,B115,B125,B135,B344
 pyro-polarization                   = 0d0       0d0      -0.034d0          ! [C/m^2] O. Ambacher and Vurgaftman2
 absolute-deformation-potentials-cbs = -6.8d0   -6.8d0   -8.6d0             ! [eV] [Vurgaftman2]  absolute deformation potentials of Gamma conduction band minimum a_c (a axis), a_c (a axis), a_c (c axis)
 uniax-vb-deformation-potentials     = -3.7d0   4.5d0    8.2d0              ! D1,D2,D3 [eV] [Vurgaftman2]
                                       -4.1d0  -4.0d0   -5.5d0              ! D4,D5,D6 [eV] [Vurgaftman2]
 6x6kp-parameters                    = -7.21d0   -0.44d0     6.68d0         ! A1,A2,A3                     ! Vurgaftman2
                                       -3.46d0   -3.40d0    -4.90d0         ! A4,A5,A6                     ! Vurgaftman2
                                        0.010d0   0.00567d0  0.00567d0      ! Delta_1(cr),Delta_2,Delta_3  ! Vurgaftman2  Delta_2=Delta_3=0.017/3=Delta_so/3
$end_binary-wz-default                                                      !
!---------------------------------------------------------------------------!

!---------------------------------------------------------------------------!
! Here we are overwriting the database entries for AlN.                     !
!---------------------------------------------------------------------------!
$binary-wz-default                                                          !
 binary-type                         = AlN-wz-default                       !
 apply-to-material-numbers           = 2                                    !
 conduction-band-masses              = 0.30d0    0.30d0    0.32d0           ! Gamma Vurgaftman2  m_perp=0.30, m_perp=0.30, m_par=0.32 (with respect to c-axis)
                                       0.222d0   0.222d0   0.738d0          ! 
                                       0.33d0    0.33d0    0.52d0           ! K. Kim, W.R.l. Lambrecht, B. Segall, M. van Schilfgaarde
 valence-band-masses                 = 10.42d0  10.42d0    3.53d0           ! hh m_perp=10.42, m_perp=10.42, m_par=3.53 (with respect to c-axis) - http://www.ioffe.rssi.ru/SVA/NSM/Semicond/AlN/bandstr.html
                                       0.24d0    0.24d0    3.53d0           ! lh m_perp=0.24 , m_perp=0.24 , m_par=3.53 (with respect to c-axis) - http://www.ioffe.rssi.ru/SVA/NSM/Semicond/AlN/bandstr.html
                                       3.81d0    3.81d0    0.25d0           ! so m_perp=3.81 , m_perp=3.81 , m_par=0.25 (with respect to c-axis) - http://www.ioffe.rssi.ru/SVA/NSM/Semicond/AlN/bandstr.html

! band-gaps                           = 6.25d0    10d0      10d0             ! [eV]   0 K - Gamma, ?, ? [Vurgaftman2]
 conduction-band-energies            = 4.724455883d0 5.710d0  5.41d0        ! 0 Kelvin Vurgaftman2 (6.25 eV) Gamma okay, L guess, X guess
 valence-band-energies               = -1.526d0                             ! This is zb entry. A. Zunger, "average" valence band energy E_v [eV]

 varshni-parameters                  = 1.799d-3 0.00d0   0.00d0             ! alpha [eV/K](Gamma, indirect, indirect) Vurgaftman1, Vurgaftman2
                                       1462d0   0.00d0   0.00d0             ! beta  [K]   (Gamma, indirect, indirect) Vurgaftman1, Vurgaftman2
 static-dielectric-constants         = 8.67d0    8.67d0    8.57d0           ! eps_a, eps_a, eps_c - S.M. Komirenko et al., PRB 59, 5013 (1999) (values taken from paper of V.A. Fonoberov et al., JAP 94, 7178 (2003)
 lattice-constants                   = 0.3112d0  0.3112d0  0.4982d0         ! [nm]   a,a,c  Vurgaftman1 and Vurgaftman2 (and Review, Ambacher)  300 K
 lattice-constants-temp-coeff        = 0d0       0d0       0d0              ! [nm/K] a,a,c  Lattice constants are almost constant in temperature range 0 - 300 K. S. Figge et al. APL 94, 101915 (2009)
 elastic-constants                   = 396d0     137d0     108d0            ! [GPa] Vurgaftman1 and Vurgaftman2
                                       373d0     116d0                      ! c11,c12,c13,c33,c44
 piezo-electric-constants            = 1.79d0   -0.50d0   -0.48d0          ! [C/m^2]  e33, e31 Vurgaftman1, e15 Ambacher
                                       0d0 0d0 0d0 0d0 0d0 0d0 0d0 0d0      ! [C/m^2] B311,B312,B313,B333,B115,B125,B135,B344
 pyro-polarization                   = 0d0       0d0      -0.090d0          ! [C/m^2] O. Ambacher Review and Vurgaftman2
 absolute-deformation-potentials-cbs = -3.9d0   -3.9d0  -20.5d0             ! [eV] [Vurgaftman2]  absolute deformation potentials of Gamma conduction band minimum a_c (a axis), a_c (a axis), a_c (c axis)
 uniax-vb-deformation-potentials     = -17.1d0   7.9d0    8.8d0             ! D1,D2,D3 [eV] [Vurgaftman2]
                                        -3.9d0  -3.4d0   -3.4d0             ! D4,D5,D6 [eV] [Vurgaftman2]
 6x6kp-parameters                    = -3.86d0   -0.25d0     3.58d0         ! A1,A2,A3                     ! Vurgaftman2
                                       -1.32d0   -1.47d0    -1.64d0         ! A4,A5,A6                     ! Vurgaftman2  
                                       -0.169d0   0.00633d0  0.00633d0      ! Delta_1(cr),Delta_2,Delta_3  ! Vurgaftman2  Delta_2=Delta_3=0.019/3=Delta_so/3
$end_binary-wz-default                                                      !
!---------------------------------------------------------------------------!

!---------------------------------------------------------------------------!
! Here we are overwriting the database entries for AlGaN.                   !
!---------------------------------------------------------------------------!
$ternary-wz-default                                                         !
 ternary-type                 = Al(x)Ga(1-x)N-wz-default                    !
 apply-to-material-numbers    = 2                                           !
!bow-band-gaps                = 0.7d0    0d0      0d0                       ! [Vurgaftman2] E_g
 bow-conduction-band-energies = 0.7d0    0d0      0d0                       ! [Vurgaftman2] E_g
 bow-pyro-polarization        = 0d0      0d0     -0.021d0                   ! [C/m^2] [Vurgaftman2] and Ambacher Review (GaN -0.034, AlN -0.090) (Ambacher has different sign in bowing formula and bowing parameter which is okay.)
$end_ternary-wz-default                                                     !
!---------------------------------------------------------------------------!

!****** END MATERIALS AND ALLOY PROFILES ***********************************!

!---------------------------------------------------------------------------!
! POISSON BOUNDARY CONDITIONS                                               !
!                                                                           !
! In order to apply any voltage to the device you have to define contacts.  !
! This is done by the Poisson boundary conditions.                          !
!                                                                           !
! There are mainly two different kinds:                                     !
!     - Schottky (implies a Schottky barrier)                               !
!     - ohmic (no barrier)                                                  !
!                                                                           !
! These Poisson clusters are assigned to the region-clusters.               !
!---------------------------------------------------------------------------!
$poisson-boundary-conditions                                                !

!-----------------------------------------------------------------------------------------
! We apply a Schottky barrier boundary condition to the cluster number that contains air.
!-----------------------------------------------------------------------------------------
 poisson-cluster-number     = 1                                             !
 region-cluster-number      = 4                                             ! an integer number which refers to an existent region-cluster
 applied-voltage            = 0.0d0                                         ! apply voltage to poisson-cluster
 boundary-condition-type    = schottky              
 contact-control            = voltage              
 schottky-barrier           = %SchottkyBarrierHeight

$end_poisson-boundary-conditions                                            !
!---------------------------------------------------------------------------!

!****** QUANTUM ************************************************************!

!---------------------------------------------------------------------------!
! Including quantum models (1-band Schrodinger, multi-band k.p)            !
!---------------------------------------------------------------------------!

!---------------------------------------------------------------------------!
$quantum-regions                                                            !
 region-number          = 1                                                 !
 base-geometry          = line                                              !
 region-priority        = 1                                                 !
 x-coordinates          = %QRLeft_2DEG %QRRight_2DEG                        ! [nm]

 region-number          = 2                                                 !
 base-geometry          = line                                              !
 region-priority        = 2                                                 !
 x-coordinates          = %QRLeft_2DHG %QRRight_2DHG                        ! [nm]
$end_quantum-regions                                                        !
!---------------------------------------------------------------------------!

!---------------------------------------------------------------------------!
$quantum-cluster                                                            !
 cluster-number         = 1                                                 ! 2DEG
 region-numbers         = 1                                                 !
 deactivate-cluster     = no                                                !
!deactivate-cluster     = yes                                               !

 cluster-number         = 2                                                 ! 2DHG
 region-numbers         = 2                                                 !
 deactivate-cluster     = %Ignore2DHG
!deactivate-cluster     = no                                                !
!deactivate-cluster     = yes                                               !
$end_quantum-cluster                                                        !
!---------------------------------------------------------------------------!

!---------------------------------------------------------------------------!
$quantum-model-electrons                                                    ! 2DEG
 model-number                            =  1                               !
 model-name                              =  effective-mass                  ! 8x8kp or effective-mass
 cluster-numbers                         =  1                               ! quantum cluster numbers to which this model applies
 conduction-band-numbers                 =  1                               ! to select bands (minima) handled in Schroedinger equation
 number-of-eigenvalues-per-band          =  25                ! [Jogai2003] ! how many eigenenergies have to be calculated in each band (minimum)
 boundary-condition-100                  =  Dirichlet                       ! mixed, Neumann or (Dirichlet|dirichlet|DIRICHLET). Default is Neumann.
!boundary-condition-100                  =  Neumann                         ! mixed, Neumann or (Dirichlet|dirichlet|DIRICHLET). Default is Neumann.
$end_quantum-model-electrons                                                !
!---------------------------------------------------------------------------!

!---------------------------------------------------------------------------!
! For the holes, [Jogai2003] is calculating 70 eigenstates.
! [Jogai2003] is using 6x6 k.p. For the pr
!---------------------------------------------------------------------------!
$quantum-model-holes                                                        ! 2DHG
 model-number                            =  1                               !
 model-name                              =  effective-mass                  ! 8x8kp or effective-mass
 cluster-numbers                         =  2                               ! quantum cluster numbers to which this model applies
 valence-band-numbers                    =  1  2  3                         ! to select bands (minima) handled in Schroedinger equation
 number-of-eigenvalues-per-band          =  70 70 70          ! [Jogai2003] ! how many eigenenergies have to be calculated in each band (minimum)
 boundary-condition-100                  =  Dirichlet                       ! mixed, Neumann or (Dirichlet|dirichlet|DIRICHLET). Default is Neumann.
!boundary-condition-100                  =  Neumann                         ! mixed, Neumann or (Dirichlet|dirichlet|DIRICHLET). Default is Neumann.
$end_quantum-model-holes                                                    !
!---------------------------------------------------------------------------!

!****** END QUANTUM ********************************************************!

!****** OUTPUT *************************************************************!

!---------------------------------------------------------------------------!
! For the output the destination directories are free to choose whereas the !
! filenames are fixed and incorporate all information about the files.      !
! The directory names have to be present and also have to be written with   !
! trailing slash.   -> PC: 'dir\'   UNIX: 'dir/'                            !
! Most input specifiers are flags and have to be either 'yes' or 'no'.      !
!---------------------------------------------------------------------------!

!---------------------------------------------------------------------------!
!$global-settings                                                           !
!output-directory           = output/
!debug-level                = 0                                             !
!debug-level                = 4                                             !
!$end_global-settings                                                       !
!---------------------------------------------------------------------------!

!---------------------------------------------------------------------------!
! This is the output for the strain.                                        !
!---------------------------------------------------------------------------!
$output-strain                                                              !
 destination-directory                   = strain/
 strain                                  = yes                              !
 strain-simulation-system                = yes                              !
 hydrostatic-strain                      = yes                              !
!elastic-energy-density                  = yes                              !
$end_output-strain                                                          !
!---------------------------------------------------------------------------!

!---------------------------------------------------------------------------!
! This is the output for the band structure and the potential.              !
!---------------------------------------------------------------------------!
$output-bandstructure                                                       !
 destination-directory                   = band_structure/                      
 conduction-band-numbers                 = 1                                !
 valence-band-numbers                    = 1 2 3                            !
 potential                               = yes                              !
 electric-field                          = yes                              !
$end_output-bandstructure                                                   !
!---------------------------------------------------------------------------!

!---------------------------------------------------------------------------!
! This is the output for the densities.                                     !
!---------------------------------------------------------------------------!
$output-densities                                                           !
 destination-directory                   = densities/                      
 electrons                               = yes                              !
 holes                                   = yes                              !
 charge-density                          = yes                              !
 piezo-electricity                       = yes                              !
 pyro-electricity                        = yes                              !
 interface-density                       = yes                              !
 integrated-density                      = yes                              !
 subband-density                         = yes                              !
$end_output-densities                                                       !
!---------------------------------------------------------------------------!

!---------------------------------------------------------------------------!
$output-1-band-schroedinger                                                 !
 destination-directory                   = Schroedinger_1band/                      
                                                                            !
 conduction-band-numbers                 = 1                                ! 2DEG: 1=Gamma
 cb-min-ev                               = 1                                !
 cb-max-ev                               = 5                                !
!cb-max-ev                               = 10                               !
!cb-max-ev                               = 50                               !
                                                                            !
 valence-band-numbers                    = 1 2 3                            ! 2DHG: 1=hh, 2=lh, 3=so
 vb-min-ev                               = 1                                !
 vb-max-ev                               = 5                                !
                                                                            !
 scale                                   = 1.0d0                            !
$end_output-1-band-schroedinger                                             !
!---------------------------------------------------------------------------!

!---------------------------------------------------------------------------!
! This is the output for the material parameters.                           !
!---------------------------------------------------------------------------!
$output-material                                                            !
 destination-directory               = material_parameters/
 conduction-band-energies            = conduction_band_energy
 conduction-band-masses              = conduction_band_masses
 valence-band-energies               = valence_band_energy
 valence-band-masses                 = valence_band_masses
 static-dielectric-constants         = static_dielectric_constants
 lattice-constants                   = lattice_constants
 elastic-constants                   = elastic_constants
 piezoelectric-polarization          = piezo_constants
 spontaneous-polarization            = pyro_constants
 absolute-deformation-potentials-cbs = def_pot_cb_absolute
 uniax-vb-deformation-potentials     = def_pot_vb_uniaxial
$end_output-material                                                        !
!---------------------------------------------------------------------------!

!---------------------------------------------------------------------------!
! This is the output for the current.                                       !
!---------------------------------------------------------------------------!
$output-current-data                                                        !
 destination-directory                   = current/      
 fermi-levels                            = yes                              !
$end_output-current-data                                                    !
!---------------------------------------------------------------------------!

!****** END OUTPUT *********************************************************!
